var e="https://chat.wc504.io.vn/api/v1";const t=new class{constructor(){this.userId="4c3b4f0f-8d99-42cd-9676-8a16a974c507"}setUserId(e){this.userId=e}getUserId(){return this.userId}getHeaders(){return{"current-user-id":this.userId}}async getConversations(){try{const t=await fetch(`${e}/conversations`,{headers:this.getHeaders()});if(!t.ok)throw new Error(`Failed to fetch conversations: ${t.status}`);return(await t.json()).data||[]}catch(t){throw console.error("Error fetching conversations:",t),t}}async createConversation(t="New Conversation"){try{const r=await fetch(`${e}/conversations`,{method:"POST",headers:{"Content-Type":"application/json",...this.getHeaders()},body:JSON.stringify({title:t})});if(!r.ok)throw new Error(`Failed to create conversation: ${r.status}`);return(await r.json()).data}catch(r){throw console.error("Error creating conversation:",r),r}}async getConversationMessages(t,r=100){try{const n=await fetch(`${e}/conversations/${t}/messages?limit=${r}`,{headers:this.getHeaders()});if(!n.ok)throw new Error(`Failed to fetch messages: ${n.status}`);const s=(await n.json()).data;return s?.messages?s.messages.map(e=>({id:e.id,message_type:e.role||e.message_type,content:e.content,created_at:e.timestamp||e.created_at})):[]}catch(n){throw console.error("Error fetching conversation messages:",n),n}}async sendMessage(t,r){try{const n=await fetch(`${e}/conversations/${t}/messages`,{method:"POST",headers:{"Content-Type":"application/json",...this.getHeaders()},body:JSON.stringify(r)});if(!n.ok)throw new Error(`Failed to send message: ${n.status}`);return await n.json()}catch(n){throw console.error("Error sending message:",n),n}}async indexMeeting(t){try{const r=new FormData;r.append("meeting_id",t.meeting_id),r.append("current_user_id",t.current_user_id),t.transcript&&r.append("transcript",t.transcript),t.meeting_note_file&&r.append("meeting_note_file",t.meeting_note_file);const n=await fetch(`${e}/meetings/index`,{method:"POST",headers:{...this.getHeaders()},body:r});if(!n.ok)throw new Error(`Failed to index meeting: ${n.status}`);return await n.json()}catch(r){throw console.error("Error indexing meeting:",r),r}}connectToConversation(t,r){const n=new EventSource(`${e}/conversations/${t}/events`);return n.onmessage=e=>{try{const t=JSON.parse(e.data);if("chat_message"===t.type&&t.message){const e={id:t.message.id,message_type:t.message.message_type,content:t.message.content,created_at:t.message.created_at,error:t.message.error||!1};r(e)}}catch(t){console.error("Error parsing SSE message:",t)}},n.onerror=e=>{console.error("SSE connection error:",e)},n}disconnectSSE(e){e&&e.close()}generateUUID(){return"undefined"!=typeof crypto&&crypto.randomUUID?crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}formatDate(e){const t=new Date(e),r=new Date;return t.toDateString()===r.toDateString()?t.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}):t.toLocaleDateString([],{month:"short",day:"numeric"})}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}highlightMentions(e){return this.escapeHtml(e).replace(/@(\w+):([a-f0-9-]+)/g,'<span class="mention">$&</span>')}parseMentions(e){const t=/@(\w+):([a-f0-9-]+)/g,r=[];let n;for(;null!==(n=t.exec(e));)r.push({entity_type:n[1],entity_id:n[2],offset_start:n.index,offset_end:n.index+n[0].length});return r}};export{t};