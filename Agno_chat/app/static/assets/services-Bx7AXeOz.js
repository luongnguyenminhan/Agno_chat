var e="chat_access_token",t="chat_user_id",r=class{static getAccessToken(){try{return localStorage.getItem(e)||null}catch{return null}}static setAccessToken(t){try{localStorage.setItem(e,t)}catch(r){console.error("Cannot set access token:",r)}}static clearAccessToken(){try{localStorage.removeItem(e)}catch(t){console.error("Cannot clear access token:",t)}}static hasAccessToken(){return!!this.getAccessToken()}},s=class{static getUserId(){try{return localStorage.getItem(t)||null}catch{return null}}static setUserId(e){try{localStorage.setItem(t,e)}catch(r){console.error("Cannot set user ID:",r)}}static clearUserId(){try{localStorage.removeItem(t)}catch(e){console.error("Cannot clear user ID:",e)}}},n="https://chat.wc504.io.vn/api/v1";const o=new class{constructor(){this.userId="4c3b4f0f-8d99-42cd-9676-8a16a974c507"}setUserId(e){this.userId=e}getUserId(){return this.userId}getHeaders(){const e={"current-user-id":this.userId},t=r.getAccessToken();return t&&(e.Authorization=`Bearer ${t}`),e}async getConversations(){try{const e=await fetch(`${n}/conversations`,{headers:this.getHeaders()});if(!e.ok)throw new Error(`Failed to fetch conversations: ${e.status}`);return(await e.json()).data||[]}catch(e){throw console.error("Error fetching conversations:",e),e}}async createConversation(e="New Conversation"){try{const t=await fetch(`${n}/conversations`,{method:"POST",headers:{"Content-Type":"application/json",...this.getHeaders()},body:JSON.stringify({title:e})});if(!t.ok)throw new Error(`Failed to create conversation: ${t.status}`);return(await t.json()).data}catch(t){throw console.error("Error creating conversation:",t),t}}async getConversationMessages(e,t=100){try{const r=await fetch(`${n}/conversations/${e}/messages?limit=${t}`,{headers:this.getHeaders()});if(!r.ok)throw new Error(`Failed to fetch messages: ${r.status}`);const s=(await r.json()).data;return s?.messages?s.messages.map(e=>({id:e.id,message_type:e.role||e.message_type,content:e.content,created_at:e.timestamp||e.created_at})):[]}catch(r){throw console.error("Error fetching conversation messages:",r),r}}async sendMessage(e,t){try{const r=await fetch(`${n}/conversations/${e}/messages`,{method:"POST",headers:{"Content-Type":"application/json",...this.getHeaders()},body:JSON.stringify(t)});if(!r.ok)throw new Error(`Failed to send message: ${r.status}`);return await r.json()}catch(r){throw console.error("Error sending message:",r),r}}async indexMeeting(e){try{const t=new FormData;t.append("meeting_id",e.meeting_id),t.append("current_user_id",e.current_user_id),e.transcript&&t.append("transcript",e.transcript),e.meeting_note_file&&t.append("meeting_note_file",e.meeting_note_file);const r=await fetch(`${n}/meetings/index`,{method:"POST",headers:{...this.getHeaders()},body:t});if(!r.ok)throw new Error(`Failed to index meeting: ${r.status}`);return await r.json()}catch(t){throw console.error("Error indexing meeting:",t),t}}async searchMeetings(e){try{const t="https://frecord.dev.meobeo.ai/api/v1/meetings/",r=new URLSearchParams({page:"1",page_size:"16"});if(e.trim()){const t=[{field:"title",operator:"contains",value:e}];r.set("filters_json",JSON.stringify(t))}const s=await fetch(`${t}?${r.toString()}`,{headers:this.getHeaders()});if(!s.ok)throw new Error(`Failed to search meetings: ${s.status}`);const n=await s.json();return console.log("ðŸ“¥ API Response:",n),console.log("ðŸŽ¯ Found items:",n.data?.items?.length||0),n.data.items||[]}catch(t){return console.error("Error searching meetings:",t),[]}}connectToConversation(e,t){const r=new EventSource(`${n}/conversations/${e}/events`);return r.onmessage=e=>{try{const r=JSON.parse(e.data);if("chat_message"===r.type&&r.message){const e={id:r.message.id,message_type:r.message.message_type,content:r.message.content,created_at:r.message.created_at,error:r.message.error||!1};t(e)}}catch(r){console.error("Error parsing SSE message:",r)}},r.onerror=e=>{console.error("SSE connection error:",e)},r}disconnectSSE(e){e&&e.close()}async getUserInfo(){try{const e=await fetch("https://frecord.dev.meobeo.ai/api/v1/users/me",{headers:this.getHeaders()});if(!e.ok)throw new Error(`Failed to fetch user info: ${e.status}`);const t=await e.json();return t?.data?.id&&(s.setUserId(t.data.id),this.setUserId(t.data.id)),t}catch(e){throw console.error("Error fetching user info:",e),e}}generateUUID(){return"undefined"!=typeof crypto&&crypto.randomUUID?crypto.randomUUID():"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}formatDate(e){const t=new Date(e),r=new Date;return t.toDateString()===r.toDateString()?t.toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}):t.toLocaleDateString([],{month:"short",day:"numeric"})}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}highlightMentions(e){return this.escapeHtml(e).replace(/@\{(\w+)\}\{([^}]+)\}/g,'<span class="mention">$&</span>')}parseMentions(e){const t=/@\{(\w+)\}\{([^}]+)\}/g,r=[];let s;for(;null!==(s=t.exec(e));){const[,e,t]=s;r.push({entity_type:e,entity_id:t,offset_start:s.index,offset_end:s.index+s[0].length})}return r}async resolveMeetingMentions(e){return e.map(e=>({entity_type:e.entity_type,entity_id:e.entity_id,offset_start:e.offset_start,offset_end:e.offset_end}))}};export{r as n,s as r,o as t};